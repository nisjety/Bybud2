services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    command: mongod --bind_ip_all
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' --quiet localhost:27017
      interval: 10s
      timeout: 10s
      retries: 5

  # Optional: Initialize collections (you can remove this if you want collections created automatically)
  mongo-init:
    image: mongo:latest
    restart: "no"
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      mongosh mongodb://mongodb:27017 --eval '
        // Create databases and collections
        db.getSiblingDB("user").createCollection("users");
        db.getSiblingDB("delivery").createCollection("deliveries");'

  # Redis for Caching
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes

  # Kafka and Zookeeper for Event Streaming
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  # âœ… Kafka for Messaging (Using Bitnami Kafka)
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb-data:
    driver: local
  redis-data:
    driver: local
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local